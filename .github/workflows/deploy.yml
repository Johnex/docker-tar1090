name: Deploy

on:
  workflow_dispatch:
    inputs:
      reason:
        required: true
        description: 'Reason for running this workflow'

  push:
    branches:
      - main
    # Trigger only on specific files being updated.

    paths:
      - Dockerfile
      - rootfs/**

jobs:

  workflow-dispatch:
    name: Triggered via Workflow Dispatch?
    # only run this step if workflow dispatch triggered
    # log the reason the workflow dispatch was triggered
    if: |
      github.event_name == 'workflow_dispatch' &&
      github.event.inputs.reason != ''
    runs-on: ubuntu-latest
    steps:
      - name: Log dispatch reason
        env:
          INPUTS_REASON: ${{ github.event.inputs.reason }}
        run: |
          echo "Workflow dispatch reason: $INPUTS_REASON"

  deploy:
    name: Deploy
    uses: sdr-enthusiasts/common-github-workflows/.github/workflows/build_and_push_image.yml@main
    with:
      push_enabled: true
      push_destinations: ghcr.io;dockerhub
      ghcr_repo_owner: ${{ github.repository_owner }}
      ghcr_repo: ${{ github.repository }}
      dockerhub_profile: mikenye
      dockerhub_repo: tar1090
      get_version_method: git_commit_hash_short
    secrets:
      ghcr_token: ${{ secrets.GITHUB_TOKEN }}
      dockerhub_token: ${{ secrets.DOCKERHUB_TOKEN }}

  deploy_ghcr_multiarch_no_telegraf:
    name: Deploy image without Telegraf ghcr.io (Multi-Arch)
    needs: [Deploy]
    runs-on: ubuntu-latest
    steps:

      # Check out our code
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Log into ghcr (so we can push images)
      - name: Login to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Get metadata from repo
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.GHCR_REGISTRY }}/${{ env.IMAGE_NAME }}

      # Set up QEMU for multi-arch builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      # Set up buildx for multi platform builds
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: image=moby/buildkit:v0.10.6
      
      # remove telegraf from Dockerfile
      - name: Remove Telegraf from Dockerfile
        run: |
          sed -i 's|\(FROM telegraf.*\)|# \1|g' ./Dockerfile
          sed -i 's|\(COPY --from=telegraf.*\)|# \1|g' ./Dockerfile
          sed -i 's|\(rm -rf /tmp/\*)|\1 /etc/cont-init.d/10-telegraf-conf /etc/services.d/telegraf /etc/telegraf' ./Dockerfile

      # Build "latest_no_telegraf"
      - name: Build & Push - latest_no_telegraf
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          no-cache: true
          platforms: linux/amd64,linux/arm/v7,linux/arm64,linux/i386
          push: true
          tags: ghcr.io/${{ env.GHCR_IMAGE }}:latest_no_telegraf
          labels: ${{ steps.meta.outputs.labels }}

